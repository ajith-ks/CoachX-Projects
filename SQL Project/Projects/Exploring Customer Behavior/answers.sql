use Exploring_Customer_Behavior;

 -- Q1. What is the total sales revenue generated by each product?
select p.product_id, p.product_name, sum(price) as sales_revenue from product p
join sales s on p.product_id =s.product_id
group by p.product_name, p.product_id

-- Q2. Which 3 product has the highest sales revenue?
select top 3 p.product_id, p.product_name, sum(price) as sales_revenue from product p
join sales s on p.product_id =s.product_id
group by p.product_name, p.product_id
order by sales_revenue desc


-- Q3. How many users have signed up for the service and has taken the gold membership?

select (select count(*) from users) as no_of_users_signed_up,  count(*)  as no_of_users_taken_gold_membership from goldusers_signup

-- Q4. What is the revenue generated from gold users?
select g.userid ,un.Names ,SUM(p.price) as total_revenue_by_gold_users from product p
join sales s on p.product_id =s.product_id
join goldusers_signup g on s.userid = g.userid
join user_name un on g.userid = un.userid
group by g.userid, un.Names


-- Q5. What is the total revenue generated from gold users?
select  SUM(p.price) as total_revenue_by_gold_users from product p
join sales s on p.product_id =s.product_id
join goldusers_signup g on s.userid = g.userid

-- Q6. Which users has been a gold user for the How much of time?
select g.userid,un.Names, g.gold_signup_date, CAST(GETDATE() AS DATE) as today , DATEDIFF(DAY,g.gold_signup_date,GETDATE()) as period_of_membership_in_days
from goldusers_signup g
join user_name un on g.userid = un.userid
order by period_of_membership_in_days desc

-- Q7. What is the most popular product among gold users?
select  p.product_name, count(*) as orderd_times  from product p
join sales s on p.product_id =s.product_id
join goldusers_signup g on s.userid = g.userid
group by p.product_name
order by orderd_times desc;

--Q8. What is the total sales revenue generated in each year?
select YEAR(created_date) as year, sum(p.price) as sales_revenue from sales s
join product p on p.product_id = s.product_id
group by YEAR(created_date);

-- Q9. How has the sales revenue changed over the years?
with revenue_change as(
select YEAR(created_date) as sales_year, sum(p.price) as sales_revenue from sales s
join product p on p.product_id = s.product_id
group by YEAR(created_date) 
)
select  sales_year, sales_revenue ,
lag(sales_revenue) over (order by sales_year) as Previous_year_revenue,
sales_revenue - lag(sales_revenue) over (order by sales_year) as revenue_change,
case
when lag(sales_revenue) over (order by sales_year) is null then null
else
((sales_revenue - lag(sales_revenue) over (order by sales_year))  * 100) /lag(sales_revenue) over (order by sales_year) 
end as percentage_change
from revenue_change;

--Q10. What is the average Gold-signup compare to just sign up for the users?
with user_comparison as (
select 
(select 
count(*) from users) as no_of_users_signed_up,  
count(*)  as no_of_users_taken_gold_membership from goldusers_signup
)
select no_of_users_signed_up, no_of_users_taken_gold_membership,
round((cast(no_of_users_taken_gold_membership as float) * 100.0) / no_of_users_signed_up,1) as gold_sign_up_percentage
from user_comparison;

-- Q11. How many gold members users have order how many numbers of time ?
select g.userid, un.Names, count(*) as Total_orders from sales s 
join goldusers_signup g on g.userid = s.userid
join user_name un on un.userid = g.userid
group by g.userid,un.Names
order by Total_orders desc;

-- Q12. What is the total amount each customer spend on Online Food Delivery?
select u.userid, un.Names, sum(p.price) as Total_spends from sales s 
join users u on u.userid = s.userid
join user_name un on un.userid = u.userid
join product p on p.product_id = s.product_id
group by u.userid, un.Names


--- Q13. What is the frequency of customer visits to the online platform?
select u.userid, un.Names, count(*) as Total_visits from sales s 
join users u on u.userid = s.userid
join user_name un on un.userid = u.userid
group by u.userid, un.Names;


-- Q14. What was the first order purchase by each customer ?
with purchase_cte as (
select u.userid, un.Names, s.created_date,
rank() over (partition by u.userid order by s.created_date) as purchased_rank
from sales s 
join users u on u.userid = s.userid
join user_name un on un.userid = u.userid 
)
select userid,names,created_date from purchase_cte where purchased_rank = 1 order by created_date;

-- Q15. What is the most purchase item on the menu and how many times was it purchased by all customers?
select top 1 p.product_name, count(s.product_id) as total_purchases from sales s
join product p on p.product_id = s.product_id
group by p.product_name
order by total_purchases desc

-- Q16. Which item was most popular for each customer ?
with popular_cte as (
select un.Names,p.product_name , count(p.product_id) as total_purchases ,
rank() over (partition by un.names order by count(p.product_id) desc) as purchased_rank --can use row_number() as well but that will ignore products with same number of purchases
from sales s 
join users u on u.userid = s.userid
join user_name un on un.userid = u.userid 
join product p on p.product_id = s.product_id
group by un.names,p.product_name
)
select names,product_name from popular_cte where purchased_rank = 1

-- Q17. Which item was purchase first by the customer after they become a member ?
with purchase_cte as (
select un.Names, s.created_date as purchase_date, p.product_name ,
rank() over (partition by u.userid order by s.created_date) as purchased_rank
from sales s 
join goldusers_signup u on u.userid = s.userid
join user_name un on un.userid = u.userid 
join product p on p.product_id = s.product_id
where s.created_date > u.gold_signup_date
)
select Names,product_name as first_purchase from purchase_cte where purchased_rank = 1

-- Q18.Which item was purchase before the customer become a member ?
with purchase_cte as (
select u.userid ,un.Names, s.created_date as purchase_date, p.product_name ,u.gold_signup_date ,
rank() over (partition by u.userid order by s.created_date desc) as purchased_rank
from sales s 
join goldusers_signup u on u.userid = s.userid
join user_name un on un.userid = u.userid 
join product p on p.product_id = s.product_id
where s.created_date < u.gold_signup_date
)
select Names,product_name as first_purchase from purchase_cte where purchased_rank = 1

-- Q19. What is the total orders and amount spent for each member before they become a member ?

select u.userid ,un.Names,  count(s.product_id) as times_purchased ,sum(p.price) as total_amount
from sales s 
join goldusers_signup u on u.userid = s.userid
join user_name un on un.userid = u.userid 
join product p on p.product_id = s.product_id
where s.created_date < u.gold_signup_date
group by u.userid ,un.Names

--Q20. Rank all the transactions for each member whenever they are a XYZ gold member for every non gold member Transaction marks as na ?

select un.Names, p.product_name, p.price,
case
when g.userid is null then 'NA'
else cast(dense_rank() over (partition  by un.names order by p.price desc) as varchar(2))
end as Purchase_rank
from sales s
join users u on u.userid = s.userid
join product p on p.product_id = s.product_id
left join goldusers_signup g on u.userid = g.userid
join user_name un on u.userid = un.userid
